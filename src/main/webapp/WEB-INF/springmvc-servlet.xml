<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		">

    <!-- Configures the @Controller programming model -->
    <mvc:annotation-driven/>
    <mvc:default-servlet-handler/>
    <!-- Scans the classpath of this application for @Components to deploy as beans -->
    <!-- 多个包名用逗号隔开, 但不能有空格 -->
    <context:component-scan base-package="cn.pzhu.jsj.pts.controller,cn.pzhu.jsj.pts.controller.admin,cn.pzhu.jsj.pts.controller.teacher"/>
    <mvc:view-controller path="/" view-name="forward:/index"/>
    <!-- Configures Handler Interceptors -->
    <mvc:interceptors>
        <!-- Changes the locale when a 'locale' request parameter is sent; e.g. /?locale=de -->
        <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <property name="paramName" value="locale"/>
        </bean>
        <mvc:interceptor>
			<mvc:mapping path="/student/**"/>
        	<bean class="cn.pzhu.jsj.pts.interceptor.StudentInterceptor"></bean>        
        </mvc:interceptor>
    </mvc:interceptors>
    <mvc:resources mapping="/resources/**" location="/resources/"/>

    <!-- Saves a locale change using a cookie -->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <property name="defaultLocale">
            <value>zh</value>
        </property>
        <property name="cookieMaxAge" value="100000"/>
    </bean>


    <!-- order值越小, 优先级越高 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
        <property name="order" value="1"/>
    </bean>


    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.FormHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
                <!--<bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter"/>-->
                <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter"/>
                <!--<bean class="org.springframework.http.converter.BufferedImageHttpMessageConverter"/>-->
            </list>
        </property>

    </bean>

    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- one of the properties available; the maximum file size in bytes -->
        <property name="maxUploadSize" value="1024000000"/>
    </bean>

    <!--
    View resolvers can also be configured with ResourceBundles or XML files. If you need
    different view resolving based on Locale, you have to use the resource bundle resolver.
    -->
    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/page/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--<bean id="textHtmlMediaType" class="org.springframework.http.MediaType">-->
        <!--<constructor-arg type="java.lang.String" value="text/html"/>-->
    <!--</bean>-->

    <!-- 根据客户端的不同的请求决定不同的view进行响应, 如 /blog/1.json /blog/1.xml -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="order" value="1"/>
        <!-- 设置为true以忽略对Accept Header的支持-->
        <property name="ignoreAcceptHeader" value="true"/>

        <!-- 在没有扩展名时即: "/user/1" 时的默认展现形式 -->
        <property name="defaultContentType" value="text/html"/>
        <!--<property name="defaultContentType" value="text/html"/>        -->
        <!--<property name="defaultContentType" ref="textHtmlMediaType" />-->

        <!-- 扩展名至mimeType的映射,即 /user.json => application/json -->
        <property name="mediaTypes">
            <map>
                <entry key="html" value="text/html"/>
                <entry key="json" value="application/json"/>
                <!--<entry key="xls" value="application/vnd.ms-excel"/>-->
                <!--<entry key="xml" value="application/xml"/>-->
            </map>
        </property>

        <property name="defaultViews">
            <list>
                <!-- for application/json -->
                <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"/>
            </list>
        </property>
    </bean>

</beans>
